/*
 * This file is generated by jOOQ.
 */
package com.ke.bella.openapi;


import com.ke.bella.openapi.tables.Apikey;
import com.ke.bella.openapi.tables.ApikeyMonthCost;
import com.ke.bella.openapi.tables.ApikeyRole;
import com.ke.bella.openapi.tables.ApikeyTransferLog;
import com.ke.bella.openapi.tables.Category;
import com.ke.bella.openapi.tables.Channel;
import com.ke.bella.openapi.tables.Endpoint;
import com.ke.bella.openapi.tables.EndpointCategoryRel;
import com.ke.bella.openapi.tables.Model;
import com.ke.bella.openapi.tables.ModelAuthorizerRel;
import com.ke.bella.openapi.tables.ModelEndpointRel;
import com.ke.bella.openapi.tables.Space;
import com.ke.bella.openapi.tables.SpaceMember;
import com.ke.bella.openapi.tables.SpaceRole;
import com.ke.bella.openapi.tables.User;
import com.ke.bella.openapi.tables.records.ApikeyMonthCostRecord;
import com.ke.bella.openapi.tables.records.ApikeyRecord;
import com.ke.bella.openapi.tables.records.ApikeyRoleRecord;
import com.ke.bella.openapi.tables.records.ApikeyTransferLogRecord;
import com.ke.bella.openapi.tables.records.CategoryRecord;
import com.ke.bella.openapi.tables.records.ChannelRecord;
import com.ke.bella.openapi.tables.records.EndpointCategoryRelRecord;
import com.ke.bella.openapi.tables.records.EndpointRecord;
import com.ke.bella.openapi.tables.records.ModelAuthorizerRelRecord;
import com.ke.bella.openapi.tables.records.ModelEndpointRelRecord;
import com.ke.bella.openapi.tables.records.ModelRecord;
import com.ke.bella.openapi.tables.records.SpaceMemberRecord;
import com.ke.bella.openapi.tables.records.SpaceRecord;
import com.ke.bella.openapi.tables.records.SpaceRoleRecord;
import com.ke.bella.openapi.tables.records.UserRecord;

import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * the default schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ApikeyRecord> KEY_APIKEY_PRIMARY = Internal.createUniqueKey(Apikey.APIKEY, DSL.name("KEY_apikey_PRIMARY"), new TableField[] { Apikey.APIKEY.ID }, true);
    public static final UniqueKey<ApikeyRecord> KEY_APIKEY_UNIQ_IDX_AK_SHA = Internal.createUniqueKey(Apikey.APIKEY, DSL.name("KEY_apikey_uniq_idx_ak_sha"), new TableField[] { Apikey.APIKEY.AK_SHA }, true);
    public static final UniqueKey<ApikeyRecord> KEY_APIKEY_UNIQ_IDX_CODE = Internal.createUniqueKey(Apikey.APIKEY, DSL.name("KEY_apikey_uniq_idx_code"), new TableField[] { Apikey.APIKEY.CODE }, true);
    public static final UniqueKey<ApikeyMonthCostRecord> KEY_APIKEY_MONTH_COST_PRIMARY = Internal.createUniqueKey(ApikeyMonthCost.APIKEY_MONTH_COST, DSL.name("KEY_apikey_month_cost_PRIMARY"), new TableField[] { ApikeyMonthCost.APIKEY_MONTH_COST.ID }, true);
    public static final UniqueKey<ApikeyMonthCostRecord> KEY_APIKEY_MONTH_COST_UNIQ_IDX_AK_CODE_MONTH = Internal.createUniqueKey(ApikeyMonthCost.APIKEY_MONTH_COST, DSL.name("KEY_apikey_month_cost_uniq_idx_ak_code_month"), new TableField[] { ApikeyMonthCost.APIKEY_MONTH_COST.AK_CODE, ApikeyMonthCost.APIKEY_MONTH_COST.MONTH }, true);
    public static final UniqueKey<ApikeyRoleRecord> KEY_APIKEY_ROLE_PRIMARY = Internal.createUniqueKey(ApikeyRole.APIKEY_ROLE, DSL.name("KEY_apikey_role_PRIMARY"), new TableField[] { ApikeyRole.APIKEY_ROLE.ID }, true);
    public static final UniqueKey<ApikeyRoleRecord> KEY_APIKEY_ROLE_UNIQ_IDX_ROLE_CODE = Internal.createUniqueKey(ApikeyRole.APIKEY_ROLE, DSL.name("KEY_apikey_role_uniq_idx_role_code"), new TableField[] { ApikeyRole.APIKEY_ROLE.ROLE_CODE }, true);
    public static final UniqueKey<ApikeyTransferLogRecord> KEY_APIKEY_TRANSFER_LOG_PRIMARY = Internal.createUniqueKey(ApikeyTransferLog.APIKEY_TRANSFER_LOG, DSL.name("KEY_apikey_transfer_log_PRIMARY"), new TableField[] { ApikeyTransferLog.APIKEY_TRANSFER_LOG.ID }, true);
    public static final UniqueKey<CategoryRecord> KEY_CATEGORY_PRIMARY = Internal.createUniqueKey(Category.CATEGORY, DSL.name("KEY_category_PRIMARY"), new TableField[] { Category.CATEGORY.ID }, true);
    public static final UniqueKey<CategoryRecord> KEY_CATEGORY_UNIQ_IDX_PARENT_CODE_CATEGORY_NAME = Internal.createUniqueKey(Category.CATEGORY, DSL.name("KEY_category_uniq_idx_parent_code_category_name"), new TableField[] { Category.CATEGORY.PARENT_CODE, Category.CATEGORY.CATEGORY_NAME }, true);
    public static final UniqueKey<CategoryRecord> KEY_CATEGORY_UNIQ_IDX_UNI_CATEGORY_CODE = Internal.createUniqueKey(Category.CATEGORY, DSL.name("KEY_category_uniq_idx_uni_category_code"), new TableField[] { Category.CATEGORY.CATEGORY_CODE }, true);
    public static final UniqueKey<ChannelRecord> KEY_CHANNEL_PRIMARY = Internal.createUniqueKey(Channel.CHANNEL, DSL.name("KEY_channel_PRIMARY"), new TableField[] { Channel.CHANNEL.ID }, true);
    public static final UniqueKey<ChannelRecord> KEY_CHANNEL_UNIQ_IDX_UNI_CHANNEL_CODE = Internal.createUniqueKey(Channel.CHANNEL, DSL.name("KEY_channel_uniq_idx_uni_channel_code"), new TableField[] { Channel.CHANNEL.CHANNEL_CODE }, true);
    public static final UniqueKey<EndpointRecord> KEY_ENDPOINT_PRIMARY = Internal.createUniqueKey(Endpoint.ENDPOINT, DSL.name("KEY_endpoint_PRIMARY"), new TableField[] { Endpoint.ENDPOINT.ID }, true);
    public static final UniqueKey<EndpointRecord> KEY_ENDPOINT_UNIQ_IDX_UNI_ENDPOINT = Internal.createUniqueKey(Endpoint.ENDPOINT, DSL.name("KEY_endpoint_uniq_idx_uni_endpoint"), new TableField[] { Endpoint.ENDPOINT.ENDPOINT_ }, true);
    public static final UniqueKey<EndpointRecord> KEY_ENDPOINT_UNIQ_IDX_UNI_ENDPOINT_CODE = Internal.createUniqueKey(Endpoint.ENDPOINT, DSL.name("KEY_endpoint_uniq_idx_uni_endpoint_code"), new TableField[] { Endpoint.ENDPOINT.ENDPOINT_CODE }, true);
    public static final UniqueKey<EndpointCategoryRelRecord> KEY_ENDPOINT_CATEGORY_REL_PRIMARY = Internal.createUniqueKey(EndpointCategoryRel.ENDPOINT_CATEGORY_REL, DSL.name("KEY_endpoint_category_rel_PRIMARY"), new TableField[] { EndpointCategoryRel.ENDPOINT_CATEGORY_REL.ID }, true);
    public static final UniqueKey<EndpointCategoryRelRecord> KEY_ENDPOINT_CATEGORY_REL_UNIQ_IDX_UNI_ENDPOINT_CATEGORY_CODE = Internal.createUniqueKey(EndpointCategoryRel.ENDPOINT_CATEGORY_REL, DSL.name("KEY_endpoint_category_rel_uniq_idx_uni_endpoint_category_code"), new TableField[] { EndpointCategoryRel.ENDPOINT_CATEGORY_REL.ENDPOINT, EndpointCategoryRel.ENDPOINT_CATEGORY_REL.CATEGORY_CODE }, true);
    public static final UniqueKey<ModelRecord> KEY_MODEL_PRIMARY = Internal.createUniqueKey(Model.MODEL, DSL.name("KEY_model_PRIMARY"), new TableField[] { Model.MODEL.ID }, true);
    public static final UniqueKey<ModelRecord> KEY_MODEL_UNIQ_IDX_UNI_MODEL_NAME = Internal.createUniqueKey(Model.MODEL, DSL.name("KEY_model_uniq_idx_uni_model_name"), new TableField[] { Model.MODEL.MODEL_NAME }, true);
    public static final UniqueKey<ModelAuthorizerRelRecord> KEY_MODEL_AUTHORIZER_REL_PRIMARY = Internal.createUniqueKey(ModelAuthorizerRel.MODEL_AUTHORIZER_REL, DSL.name("KEY_model_authorizer_rel_PRIMARY"), new TableField[] { ModelAuthorizerRel.MODEL_AUTHORIZER_REL.ID }, true);
    public static final UniqueKey<ModelAuthorizerRelRecord> KEY_MODEL_AUTHORIZER_REL_UNIQ_IDX_UNI_MODEL_NAME_AUTHORIZER_CODE = Internal.createUniqueKey(ModelAuthorizerRel.MODEL_AUTHORIZER_REL, DSL.name("KEY_model_authorizer_rel_uniq_idx_uni_model_name_authorizer_code"), new TableField[] { ModelAuthorizerRel.MODEL_AUTHORIZER_REL.MODEL_NAME, ModelAuthorizerRel.MODEL_AUTHORIZER_REL.AUTHORIZER_CODE }, true);
    public static final UniqueKey<ModelEndpointRelRecord> KEY_MODEL_ENDPOINT_REL_PRIMARY = Internal.createUniqueKey(ModelEndpointRel.MODEL_ENDPOINT_REL, DSL.name("KEY_model_endpoint_rel_PRIMARY"), new TableField[] { ModelEndpointRel.MODEL_ENDPOINT_REL.ID }, true);
    public static final UniqueKey<ModelEndpointRelRecord> KEY_MODEL_ENDPOINT_REL_UNIQ_IDX_UNI_ENDPOINT_MODEL = Internal.createUniqueKey(ModelEndpointRel.MODEL_ENDPOINT_REL, DSL.name("KEY_model_endpoint_rel_uniq_idx_uni_endpoint_model"), new TableField[] { ModelEndpointRel.MODEL_ENDPOINT_REL.ENDPOINT, ModelEndpointRel.MODEL_ENDPOINT_REL.MODEL_NAME }, true);
    public static final UniqueKey<SpaceRecord> KEY_SPACE_PRIMARY = Internal.createUniqueKey(Space.SPACE, DSL.name("KEY_space_PRIMARY"), new TableField[] { Space.SPACE.ID }, true);
    public static final UniqueKey<SpaceRecord> KEY_SPACE_UNIQ_IDX_SPACE_CODE = Internal.createUniqueKey(Space.SPACE, DSL.name("KEY_space_uniq_idx_space_code"), new TableField[] { Space.SPACE.SPACE_CODE }, true);
    public static final UniqueKey<SpaceMemberRecord> KEY_SPACE_MEMBER_PRIMARY = Internal.createUniqueKey(SpaceMember.SPACE_MEMBER, DSL.name("KEY_space_member_PRIMARY"), new TableField[] { SpaceMember.SPACE_MEMBER.ID }, true);
    public static final UniqueKey<SpaceRoleRecord> KEY_SPACE_ROLE_PRIMARY = Internal.createUniqueKey(SpaceRole.SPACE_ROLE, DSL.name("KEY_space_role_PRIMARY"), new TableField[] { SpaceRole.SPACE_ROLE.ID }, true);
    public static final UniqueKey<SpaceRoleRecord> KEY_SPACE_ROLE_UNIQ_IDX_SPACE_CODE_ROLE_CODE = Internal.createUniqueKey(SpaceRole.SPACE_ROLE, DSL.name("KEY_space_role_uniq_idx_space_code_role_code"), new TableField[] { SpaceRole.SPACE_ROLE.SPACE_CODE, SpaceRole.SPACE_ROLE.ROLE_CODE }, true);
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = Internal.createUniqueKey(User.USER, DSL.name("KEY_user_PRIMARY"), new TableField[] { User.USER.ID }, true);
    public static final UniqueKey<UserRecord> KEY_USER_UK_SOURCE_SOURCE_ID = Internal.createUniqueKey(User.USER, DSL.name("KEY_user_uk_source_source_id"), new TableField[] { User.USER.SOURCE, User.USER.SOURCE_ID }, true);
}
