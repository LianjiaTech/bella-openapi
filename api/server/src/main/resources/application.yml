server:
  tomcat:
    max-threads: 500
  max-http-header-size: 10240

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/bella_openapi?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai
    username: bella_user
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
  redis:
    redisson:
      config: |
        singleServerConfig:
          address: "redis://localhost:6379"
        codec: !<org.redisson.client.codec.StringCodec> {}

jetcache:
  statIntervalMinutes: 0
  areaInCacheName: false
  hidePackages: com.ke.bella.openapi
  local:
    default:
      type: caffeine
      limit: 100
      keyConvertor: jackson
      expireAfterAccessInMillis: 0
      expireAfterWriteInMillis: 120000
  remote:
    default:
      type: redisson
      redissonClient: redissonClient
      broadcastChannel: BellaOpenapiBroadcastChannel
      keyConvertor: jackson
      expireAfterAccessInMillis: 0
      expireAfterWriteInMillis: 600000
      keyPrefix: bella-openapi-

# Docs API配置
springdoc:
  swagger-ui:
    path: /docs/index.html
    enabled: true
  api-docs:
    path: /docs/api
    enabled: true


bella:
  server:
    initializer:
      enabled: true
  login:
    authorization-header: Authorization
    login-page-url: http://localhost:3000/login
  session:
    cookie-name: bella_openapi_sessionId
    max-inactive-interval: 60
    cookie-max-age: -1
    cookie-domain: localhost
    cookie-context-path: /
  openapi:
    max-models-per-request: 3

app:
  id: bella-openapi

apollo:
  bootstrap:
    enabled: false
    eagerLoad:
      enabled: true
    namespaces: application
  property:
    order:
      enabled: true
  cacheDir: ./config-cache
  cluster: default
management:
  endpoints:
    web:
      exposure:
        include: 'health,info,prometheus'
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
test:
  apikey: apikey #替换apikey 用于单测

# 登录配置
# bella:
#   oauth:
#     client-index: http://localhost:3000  # 客户端首页URL
#     redirect: http://localhost:8080
#     providers:  # 支持多个OAuth提供商
#       google:  # Google OAuth配置
#         enabled: true
#         client-id: your-google-client-id
#         client-secret: your-google-client-secret
#         auth-uri: https://accounts.google.com/o/oauth2/v2/auth
#         token-uri: https://oauth2.googleapis.com/token
#         user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
#         scope: profile email
#       github:  # GitHub OAuth配置
#         enabled: true
#         client-id: your-github-client-id
#         client-secret: your-github-client-secret
#         scope: read:user user:email
#         authUri: https://github.com/login/oauth/authorize
#         tokenUri: https://github.com/login/oauth/access_token
#         userInfoUri: https://api.github.com/user
